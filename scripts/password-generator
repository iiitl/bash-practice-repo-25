#!/usr/bin/env bash

# Issue: Implement Password Generation Functions
# Description:
# Create a function that generates passwords, The password should consist of uppercase letters, lowercase letters, numbers, and special characters. The function should take in a single argument, which is the length of the password to generate. The function should return the generated password.
gen_pass() {
  local len=$1  # password length

  # Is length valid?
  if [[ -z "$len" || "$len" -lt 4 ]]; then
    echo "Error: Password length must be at least 4." >&2
    return 1
  fi

  up="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
  lo="abcdefghijklmnopqrstuvwxyz"
  num="0123456789"
  sp="!@#$%^&*()-_=+[]{}|;:'\",.<>?/"

  # making sure that one from each type is taken
  pass=""
  pass+=$(echo "$up" | fold -w1 | shuf | head -n1)
  pass+=$(echo "$lo" | fold -w1 | shuf | head -n1)
  pass+=$(echo "$num" | fold -w1 | shuf | head -n1)
  pass+=$(echo "$sp" | fold -w1 | shuf | head -n1)

  all="$up$lo$num$sp"
  pass+=$(echo "$all" | fold -w1 | shuf | head -c $((len - 4)))

  echo "$pass" | fold -w1 | shuf | tr -d '\n'
}

echo "Generated Password for you: $(gen_pass 12)"